<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>akrantiain変換部の仕様</title>
<link rel="stylesheet" type="text/css" href="main.css">
<style>
table.stat { border-spacing: 7px 1px; }
table.stat td { border-color : orange;
     border-width : 2px;
     border-style : solid;
     padding : 4px;
     text-align:center;
}
</style>
</head>
<body>
<div><a href="https://github.com/sozysozbot/akrantiain2">View on Github</a></div>
<h2>akrantiain変換部の仕様</h2>
<h4 id="structure">2-0. 概略</h4>
<pre>
変換部は、「環境情報(環境指定識別子一覧と句読点情報からなる)」「変換規則のリスト」「入力文字列」を受けとり、「実行時エラー」または「出力文字列」を返す。
2017/03/22 05:42現在、akrantiain変換部は以下のような流れになっている。
</pre>
<!-- これはcook -->
<ol style="font-family:monospace">
<li>
        環境指定識別子<code><span class="identifier">CASE_SENSITIVE</span></code>が指定されていなければ、変換規則の入力部と入力文字列を小文字に変換する。
</li>
<li>
        入力文字列の末尾にスペースを付加し、Statに変換する
</li>
<li>「変換規則のリスト」を左から走査していき、Statに順に変換規則を<a href="#apply">適用</a>していく</li>
<li>Statのうち未処理のものがある場合、変換元がスペースまたは句読点なら変換先にスペースを指定する。そうでなければ実行時エラー#210を吐く。</li>
<li>変換先を全てつなげ、出力文字列とする。</li>
</ol>
<pre>
Statと変換規則の仕様は後述。
</pre>
<h4 id="stat">2-1. Stat</h4>
<pre>Statは、「『文字列と文字列の対』の配列」である。初期状態は、（1文字と未定義の対）の配列であり、例えば入力文字列が"spaghetti"であれば、次のような初期状態となる。</pre>
<table class="stat">
<tr><td>"s"</td><td>"p"</td><td>"a"</td><td>"g"</td><td>"h"</td><td>"e"</td><td>"t"</td><td>"t"</td><td>"i"</td></tr>
<tr><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td></tr>
</table>
<h4 id="convert">2-2. 変換規則</h4>
<pre>
変換規則は、以下の3要素からなる。<!-- data Rule -->
</pre>
<ol style="font-family:monospace">
<li>左条件（省略可能）
        <ul><li>Condition</li></ul>
</li>
<li>変換元と変換先の対応
        <ul><li>a</li></ul>
</li>
<li>右条件（省略可能）
        <ul><li>Condition</li></ul>
</li>
</ol>

<h4 id="apply">2-3. 変換規則の適用</h4>
<pre>
2017/03/22 05:42現在、変換規則の適用は以下のような流れで行われている。
FIXME
</pre>

</body>
</html>
